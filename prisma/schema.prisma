generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filteredRelationCount"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  email     String     @unique
  hash      String
  avatar    String?
  isAdmin   Boolean    @default(false)
  name      String?
  bookmarks Bookmark[]
  tasks     Task[]

  @@map("users")
}

model Bookmark {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String?
  link        String
  userId      Int
  user        User     @relation(fields: [userId], references: [id])

  @@map("bookmarks")
}

model Menu {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  label       String
  codeGroup   String    @unique
  urlParam    String
  description String?
  image       String?
  isActive    Boolean   @default(true)
  antrians    Antrian[]
  counters    Counter[]
  tasks       Task[]

  @@map("menus")
}

model Counter {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  nomorCounter String
  group        String
  menu         Menu     @relation(fields: [group], references: [codeGroup])
  tasks        Task[]

  @@map("counters")
}

model Antrian {
  id        Int        @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  nomor     String  
  nomorInt  Int
  group     String 
  statusAntrian Int  @default(1) 
  menu      Menu     @relation(fields: [group], references: [codeGroup])
  tasks     Task[] 

  @@map("antrians")
}

model Task {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  tanggal   DateTime? @default(now())
  petugasId Int
  counterId Int
  group     String
  antrianId Int       
  counter   Counter   @relation(fields: [counterId], references: [id])
  menu      Menu      @relation(fields: [group], references: [codeGroup])
  user      User      @relation(fields: [petugasId], references: [id])
  antrian   Antrian   @relation(fields: [antrianId], references: [id])

  @@map("tasks")
}

model Media {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isAsset   Boolean  @default(true)
  isVideo   Boolean  @default(true)
  url       String?
  type      String?
  durasi    Int?

   @@map("medias")
}

model Setting {
  id                  Int        @id @default(autoincrement())
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  banner_type         BannerType @default(VIDEO)
  durasi_transition   Int        @default(5)
  file_banner         Json?
  logo_header         String?
  text_header         String?
  theme               Theme      @default(DEFAULT)
  grid                Int        @default(4)
  running_text_active Boolean    @default(true)
  running_text        String?
  logo_print          String?
  text_print          String?
  fontsize_print      Int        @default(20)
  pin_code            String?    @default("1234")
  background_enable   Boolean     @default(true)
  background_img      String?      

  @@map("settings")
}

model Client {
  id                  Int        @id @default(autoincrement())
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  email               String      
  isFollowUp          Boolean     @default(false)
  status              Int         @default(1)

  @@map("clients")
}

enum BannerType {
  VIDEO
  IMAGE
}

enum Theme {
  DEFAULT
  REDMINE
  SUNSHINE
}
